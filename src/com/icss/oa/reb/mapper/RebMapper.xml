<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icss.oa.reb.dao.RebMapper">

	<!-- 查询结果集映射 -->
	<resultMap id="BaseResultMap" type="com.icss.oa.reb.pojo.Reb">
		<id column="reb_id" property="rebId" jdbcType="INTEGER" />
		<result column="reb_reason" property="rebReason" jdbcType="VARCHAR" />
		<result column="reb_amount" property="rebAmount" jdbcType="INTEGER" />
		<result column="reb_approval_status" property="rebApprovalStatus" jdbcType="VARCHAR" />
		<result column="reb_time" property="rebTime" jdbcType="DATE" />
		<association property="emp" javaType="com.icss.oa.system.pojo.Employee">
			<id column="emp_id" property="empId" jdbcType="INTEGER" />
			<result column="emp_name" property="empName" jdbcType="VARCHAR" />
		</association>
	</resultMap>

	<insert id="insert" parameterType="com.icss.oa.reb.pojo.Reb">
		insert into reb (reb_id,reb_reason, reb_amount,reb_time,reb_approval_status,reb_employee) values
		(default,#{rebReason,jdbcType=VARCHAR},#{rebAmount,jdbcType=INTEGER},#{rebTime,jdbcType=DATE},#{rebApprovalStatus,jdbcType=VARCHAR},#{emp.empId,jdbcType=INTEGER})
	</insert>

	<update id="update" parameterType="com.icss.oa.reb.pojo.Reb">
		update reb set
		reb_reason=#{rebReason},reb_amount=#{rebAmount},reb_time=#{rebTime},reb_approval_status=#{rebApprovalStatus}
		where reb_id=#{rebId,jdbcType=INTEGER}
	</update>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from reb where
		 reb_id=#{rebId,jdbcType=INTEGER}
	</delete>
	
	<select id="queryById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select * from reb r
		LEFT OUTER JOIN employee e
		ON r.`reb_employee`= e.`emp_id`
		where reb_id=#{rebId,jdbcType=INTEGER}
	</select>
	<select id="queryByEmpId"  resultMap="BaseResultMap">
		select * from reb r
		LEFT OUTER JOIN employee e
		ON r.`reb_employee`= e.`emp_id`
		where reb_employee=#{empId}
		LIMIT #{start},#{pageSize}
	</select>
	
	<select id="getCountByEmpId" resultType="java.lang.Integer">
		select count(*) from reb r
		LEFT OUTER JOIN employee e
		ON r.`reb_employee`= e.`emp_id`
		where reb_employee=#{empId}
	</select>
	
	<select id="query" resultMap="BaseResultMap">
		select * from reb r
		LEFT OUTER JOIN employee e
		ON r.`reb_employee` = e.`emp_id`
		LIMIT #{start},#{pageSize}	
	</select>
	
	<select id="getCount" resultType="java.lang.Integer">
		select count(*) from reb
	</select>
	
	<select id="queryByCondition" resultMap="BaseResultMap">
	   select * from reb r
		LEFT OUTER JOIN employee e
		ON r.`reb_employee`= e.`emp_id`
	    <where>
	      <if test="rebReason != null and rebReason !='' ">
	          and reb_reason like concat('%', #{rebReason}, '%')
	      </if>
	      <if test="rebAmount != null and rebAmount !='' ">
	          and r.rebAmount=#{RebAmount}
	      </if>
	      
	      <if test="rebTime != null and rebTime !='' ">
	          and r.reb_time like concat('%', #{rebTime}, '%')
	      </if>
	      
	      <if test="rebApprovalStatus != null and rebApprovalStatus !='' ">
	          and r.reb_approval_statuslike concat('%', #{rebApprovalStatus}, '%')
	      </if>
	      
	      <if test="empName != null and empName !='' ">
	          and e.emp_name concat('%', #{empName}, '%')
	      </if>
	      
	      <if test="approverName != null and approverName !='' ">
	          and a.approver_name concat('%', #{approverName}, '%')
	      </if>
	    </where>
	    LIMIT #{start}, #{pageSize}
	</select>
	
	<select id="getCountByCondition" resultType="java.lang.Integer">
		select count(*) from reb r
		LEFT OUTER JOIN employee e
		ON r.`reb_employee`
		= e.`emp_id`
		<where>
	      <if test="rebReason != null and rebReason !='' ">
	          and reb_reason like concat('%', #{rebReason}, '%')
	      </if>
	      <if test="rebAmount != null and rebAmount !='' ">
	          and r.rebAmount=#{RebAmount}
	      </if>
	      
	      <if test="rebTime != null and rebTime !='' ">
	          and reb_time like concat('%', #{rebTime}, '%')
	      </if>
	      
	      <if test="rebApprovalStatus != null and rebApprovalStatus !='' ">
	          and r.reb_approval_statuslike concat('%', #{rebApprovalStatus}, '%')
	      </if>
	      
	      <if test="empName != null and empName !='' ">
	          and e.emp_name concat('%', #{empName}, '%')
	      </if>
	    </where>
	</select>
	
</mapper>